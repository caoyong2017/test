<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.getrag.dao.UserMapper" >

  <resultMap id="BaseResultMap" type="com.getrag.bean.User" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="login_name" property="login_name" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="last_login_time" jdbcType="TIMESTAMP" />
    <result column="last_modify_time" property="last_modify_time" jdbcType="TIMESTAMP" />
    <result column="desc_l" property="desc_l" jdbcType="LONGVARCHAR" />
    <result column="is_admin" property="is_admin" jdbcType="INTEGER" />
  </resultMap>
  
  <!-- 单个用户信息，包括其权限列表 -->
  <resultMap type="com.getrag.bean.User" id="UserRoleResultMap" extends="BaseResultMap">
  	<collection property="roleList" ofType="com.getrag.bean.Role">
  		<id column="rid" property="id"/>
  		<result column="role_name" property="role_name"/>
  		<result column="content_l" property="content_l"/>
  	</collection>
  </resultMap>
  
  <parameterMap type="com.getrag.bean.User" id="BaseUserParamMap">
  	<parameter property="id"/>
  	<parameter property="login_name"/>
  	<parameter property="login_pwd"/>
  	<parameter property="nickname"/>
  	<parameter property="phone"/>
  	<parameter property="gender"/>
  	<parameter property="create_time"/>
  	<parameter property="last_login_time"/>
  	<parameter property="last_modify_time"/>
  	<parameter property="desc_l"/>
  	<parameter property="is_admin"/>

  </parameterMap>
  
  <sql id="Base_Column_List" >
    id, login_name, login_pwd, nickname, phone, gender, create_time, last_login_time, last_modify_time, desc_l, is_admin
  </sql>
  
  <sql id="BaseSelectSql">
  	select u.*, s.id sid,s.sh_name,s.addr,s.creator from user_l u
    left join shop_l s on u.role_id=s.id
  </sql>
  
  <!-- 通过id获取用户信息 -->
  <select id="selectByPrimaryKey" resultMap="UserRoleResultMap" parameterType="java.lang.String" >
   select u.*, r.id rid, r.role_name, r.content_l
	from user_l u 
	left join role_l r on r.id = u.role_id
  </select>
  
  
  
  <!-- 通过手机号查询用户 -->
  <select id="getByPhone" parameterType="string" resultMap="BaseResultMap">
  	<include refid="BaseSelectSql" />
  	where u.phone=#{phone}
  </select>
  

  
  <!-- 登陆 -->
  <select id="selectByLoginNameAndPwd" parameterType="Map" resultMap="UserRoleResultMap">
    select u.*, r.id rid, r.role_name, r.content_l
	from user_l u 
	left join role_l r on r.id = u.role_id
	where u.login_name=#{login_name} and u.login_pwd=#{login_pwd}
  </select>
  
  <!-- 通过userId删除 -->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user_l
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <!-- 添加用户 -->
  <insert id="insert" parameterMap="BaseUserParamMap" >
     <selectKey keyProperty="id" resultType="String" order="BEFORE">
        select  replace(uuid(),'-','')   from dual  
     </selectKey>
    insert into user_l (id, login_name, login_pwd, 
      nickname, phone, create_time, last_login_time, 
      last_modify_time, desc_l, role_id, gender, is_admin)
    values (#{id,jdbcType=VARCHAR}, #{login_name,jdbcType=VARCHAR}, #{login_pwd,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, now(), #{last_login_time,jdbcType=TIMESTAMP}, 
      #{last_modify_time,jdbcType=TIMESTAMP}, #{desc_l,jdbcType=LONGVARCHAR}, '', #{gender}, #{is_admin})
  </insert>
  
  <!-- 添加用户，只添加非空的值 -->
  <insert id="insertSelective" parameterMap="BaseUserParamMap" >
    insert into user_l
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="login_name != null" >
        login_name,
      </if>
      <if test="login_pwd != null" >
        login_pwd,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="last_login_time != null" >
        last_login_time,
      </if>
      <if test="last_modify_time != null" >
        last_modify_time,
      </if>
      <if test="desc_l != null" >
        desc_l,
      </if>
      <if test="is_admin != null" >
        is_admin,
      </if>
      <if test="shop != null and shop.id != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="login_name != null" >
        #{login_name,jdbcType=VARCHAR},
      </if>
      <if test="login_pwd != null" >
        #{login_pwd,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="last_login_time != null" >
        #{last_login_time,jdbcType=TIMESTAMP},
      </if>
      <if test="last_modify_time != null" >
        #{last_modify_time,jdbcType=TIMESTAMP},
      </if>
      <if test="desc_l != null" >
        #{desc_l,jdbcType=LONGVARCHAR},
      </if>
      <if test="is_admin != null" >
        #{is_admin,jdbcType=INTEGER},
      </if>
      <if test="shop != null and shop.id != null" >
        #{shop.id}
      </if>
    </trim>
  </insert>
  
  <!-- 更新用户,只更新非空属性值 -->
  <update id="updateByPrimaryKeySelective" parameterMap="BaseUserParamMap" >
    update user_l
    <set >
      <if test="login_name != null" >
        login_name = #{login_name,jdbcType=VARCHAR},
      </if>
      <if test="login_pwd != null" >
        login_pwd = #{login_pwd,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="last_login_time != null" >
        last_login_time = #{last_login_time,jdbcType=TIMESTAMP},
      </if>
      <if test="last_modify_time != null" >
        last_modify_time = #{last_modify_time,jdbcType=TIMESTAMP},
      </if>
      <if test="desc_l != null" >
        desc_l = #{desc_l,jdbcType=LONGVARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="is_admin != null" >
        is_admin = #{is_admin,jdbcType=INTEGER},
      </if>
      <if test="shop != null and shop.id != null" >
        role_id = #{shop.id,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 更新用户所有信息 -->
  <update id="updateByPrimaryKey" parameterMap="BaseUserParamMap" >
    update user_l
    set login_name = #{login_name,jdbcType=VARCHAR},
      login_pwd = #{login_pwd,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      last_login_time = #{last_login_time,jdbcType=TIMESTAMP},
      last_modify_time = #{last_modify_time,jdbcType=TIMESTAMP},
      desc_l = #{desc_l,jdbcType=LONGVARCHAR},
      is_admin = #{is_admin,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>